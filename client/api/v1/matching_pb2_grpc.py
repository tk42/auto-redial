# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from api.v1 import matching_pb2 as api_dot_v1_dot_matching__pb2


class MatchingStoreServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetMatching = channel.unary_unary(
                '/api.v1.MatchingStoreService/GetMatching',
                request_serializer=api_dot_v1_dot_matching__pb2.GetMatchingRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_matching__pb2.GetMatchingResponse.FromString,
                )
        self.ListMatching = channel.unary_unary(
                '/api.v1.MatchingStoreService/ListMatching',
                request_serializer=api_dot_v1_dot_matching__pb2.ListMatchingRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_matching__pb2.ListMatchingResponse.FromString,
                )
        self.PutMatching = channel.unary_unary(
                '/api.v1.MatchingStoreService/PutMatching',
                request_serializer=api_dot_v1_dot_matching__pb2.PutMatchingRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_matching__pb2.PutMatchingResponse.FromString,
                )
        self.UpdateMatching = channel.unary_unary(
                '/api.v1.MatchingStoreService/UpdateMatching',
                request_serializer=api_dot_v1_dot_matching__pb2.UpdateMatchingRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_matching__pb2.UpdateMatchingResponse.FromString,
                )
        self.DeleteMatching = channel.unary_unary(
                '/api.v1.MatchingStoreService/DeleteMatching',
                request_serializer=api_dot_v1_dot_matching__pb2.DeleteMatchingRequest.SerializeToString,
                response_deserializer=api_dot_v1_dot_matching__pb2.DeleteMatchingResponse.FromString,
                )


class MatchingStoreServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetMatching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMatching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutMatching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateMatching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteMatching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MatchingStoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMatching,
                    request_deserializer=api_dot_v1_dot_matching__pb2.GetMatchingRequest.FromString,
                    response_serializer=api_dot_v1_dot_matching__pb2.GetMatchingResponse.SerializeToString,
            ),
            'ListMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMatching,
                    request_deserializer=api_dot_v1_dot_matching__pb2.ListMatchingRequest.FromString,
                    response_serializer=api_dot_v1_dot_matching__pb2.ListMatchingResponse.SerializeToString,
            ),
            'PutMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.PutMatching,
                    request_deserializer=api_dot_v1_dot_matching__pb2.PutMatchingRequest.FromString,
                    response_serializer=api_dot_v1_dot_matching__pb2.PutMatchingResponse.SerializeToString,
            ),
            'UpdateMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateMatching,
                    request_deserializer=api_dot_v1_dot_matching__pb2.UpdateMatchingRequest.FromString,
                    response_serializer=api_dot_v1_dot_matching__pb2.UpdateMatchingResponse.SerializeToString,
            ),
            'DeleteMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteMatching,
                    request_deserializer=api_dot_v1_dot_matching__pb2.DeleteMatchingRequest.FromString,
                    response_serializer=api_dot_v1_dot_matching__pb2.DeleteMatchingResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.v1.MatchingStoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MatchingStoreService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1.MatchingStoreService/GetMatching',
            api_dot_v1_dot_matching__pb2.GetMatchingRequest.SerializeToString,
            api_dot_v1_dot_matching__pb2.GetMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1.MatchingStoreService/ListMatching',
            api_dot_v1_dot_matching__pb2.ListMatchingRequest.SerializeToString,
            api_dot_v1_dot_matching__pb2.ListMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1.MatchingStoreService/PutMatching',
            api_dot_v1_dot_matching__pb2.PutMatchingRequest.SerializeToString,
            api_dot_v1_dot_matching__pb2.PutMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1.MatchingStoreService/UpdateMatching',
            api_dot_v1_dot_matching__pb2.UpdateMatchingRequest.SerializeToString,
            api_dot_v1_dot_matching__pb2.UpdateMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.v1.MatchingStoreService/DeleteMatching',
            api_dot_v1_dot_matching__pb2.DeleteMatchingRequest.SerializeToString,
            api_dot_v1_dot_matching__pb2.DeleteMatchingResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
