// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: api/v1/matching.proto

package apiv1

import (
	datetime "google.golang.org/genproto/googleapis/type/datetime"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Matching struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *datetime.DateTime   `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SerialNumber int64                `protobuf:"varint,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	ScammerId    []string             `protobuf:"bytes,4,rep,name=scammer_id,json=scammerId,proto3" json:"scammer_id,omitempty"`
	CallId       []string             `protobuf:"bytes,5,rep,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Matched      bool                 `protobuf:"varint,6,opt,name=matched,proto3" json:"matched,omitempty"`
	Checked      bool                 `protobuf:"varint,7,opt,name=checked,proto3" json:"checked,omitempty"`
	MatchingAt   *datetime.DateTime   `protobuf:"bytes,8,opt,name=matching_at,json=matchingAt,proto3,oneof" json:"matching_at,omitempty"`
	TalkTime     *durationpb.Duration `protobuf:"bytes,9,opt,name=talk_time,json=talkTime,proto3,oneof" json:"talk_time,omitempty"`
	Transcript   *string              `protobuf:"bytes,10,opt,name=transcript,proto3,oneof" json:"transcript,omitempty"`
}

func (x *Matching) Reset() {
	*x = Matching{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Matching) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Matching) ProtoMessage() {}

func (x *Matching) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Matching.ProtoReflect.Descriptor instead.
func (*Matching) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{0}
}

func (x *Matching) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Matching) GetCreatedAt() *datetime.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Matching) GetSerialNumber() int64 {
	if x != nil {
		return x.SerialNumber
	}
	return 0
}

func (x *Matching) GetScammerId() []string {
	if x != nil {
		return x.ScammerId
	}
	return nil
}

func (x *Matching) GetCallId() []string {
	if x != nil {
		return x.CallId
	}
	return nil
}

func (x *Matching) GetMatched() bool {
	if x != nil {
		return x.Matched
	}
	return false
}

func (x *Matching) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *Matching) GetMatchingAt() *datetime.DateTime {
	if x != nil {
		return x.MatchingAt
	}
	return nil
}

func (x *Matching) GetTalkTime() *durationpb.Duration {
	if x != nil {
		return x.TalkTime
	}
	return nil
}

func (x *Matching) GetTranscript() string {
	if x != nil && x.Transcript != nil {
		return *x.Transcript
	}
	return ""
}

type GetMatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMatchingRequest) Reset() {
	*x = GetMatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchingRequest) ProtoMessage() {}

func (x *GetMatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchingRequest.ProtoReflect.Descriptor instead.
func (*GetMatchingRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{1}
}

func (x *GetMatchingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetMatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matching *Matching `protobuf:"bytes,1,opt,name=matching,proto3" json:"matching,omitempty"`
}

func (x *GetMatchingResponse) Reset() {
	*x = GetMatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMatchingResponse) ProtoMessage() {}

func (x *GetMatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMatchingResponse.ProtoReflect.Descriptor instead.
func (*GetMatchingResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{2}
}

func (x *GetMatchingResponse) GetMatching() *Matching {
	if x != nil {
		return x.Matching
	}
	return nil
}

type ListMatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListMatchingRequest) Reset() {
	*x = ListMatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMatchingRequest) ProtoMessage() {}

func (x *ListMatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMatchingRequest.ProtoReflect.Descriptor instead.
func (*ListMatchingRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{3}
}

type ListMatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matching []*Matching `protobuf:"bytes,1,rep,name=matching,proto3" json:"matching,omitempty"`
}

func (x *ListMatchingResponse) Reset() {
	*x = ListMatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListMatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListMatchingResponse) ProtoMessage() {}

func (x *ListMatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListMatchingResponse.ProtoReflect.Descriptor instead.
func (*ListMatchingResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{4}
}

func (x *ListMatchingResponse) GetMatching() []*Matching {
	if x != nil {
		return x.Matching
	}
	return nil
}

type UpdateMatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Matched    *bool                `protobuf:"varint,2,opt,name=matched,proto3,oneof" json:"matched,omitempty"`
	Checked    *bool                `protobuf:"varint,3,opt,name=checked,proto3,oneof" json:"checked,omitempty"`
	MatchingAt *datetime.DateTime   `protobuf:"bytes,4,opt,name=matching_at,json=matchingAt,proto3,oneof" json:"matching_at,omitempty"`
	TalkTime   *durationpb.Duration `protobuf:"bytes,5,opt,name=talk_time,json=talkTime,proto3,oneof" json:"talk_time,omitempty"`
	Transcript *string              `protobuf:"bytes,6,opt,name=transcript,proto3,oneof" json:"transcript,omitempty"`
}

func (x *UpdateMatchingRequest) Reset() {
	*x = UpdateMatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMatchingRequest) ProtoMessage() {}

func (x *UpdateMatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMatchingRequest.ProtoReflect.Descriptor instead.
func (*UpdateMatchingRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateMatchingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateMatchingRequest) GetMatched() bool {
	if x != nil && x.Matched != nil {
		return *x.Matched
	}
	return false
}

func (x *UpdateMatchingRequest) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

func (x *UpdateMatchingRequest) GetMatchingAt() *datetime.DateTime {
	if x != nil {
		return x.MatchingAt
	}
	return nil
}

func (x *UpdateMatchingRequest) GetTalkTime() *durationpb.Duration {
	if x != nil {
		return x.TalkTime
	}
	return nil
}

func (x *UpdateMatchingRequest) GetTranscript() string {
	if x != nil && x.Transcript != nil {
		return *x.Transcript
	}
	return ""
}

type UpdateMatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matching *Matching `protobuf:"bytes,1,opt,name=matching,proto3" json:"matching,omitempty"`
}

func (x *UpdateMatchingResponse) Reset() {
	*x = UpdateMatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMatchingResponse) ProtoMessage() {}

func (x *UpdateMatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMatchingResponse.ProtoReflect.Descriptor instead.
func (*UpdateMatchingResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMatchingResponse) GetMatching() *Matching {
	if x != nil {
		return x.Matching
	}
	return nil
}

type PutMatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt    *datetime.DateTime   `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	SerialNumber int64                `protobuf:"varint,3,opt,name=serial_number,json=serialNumber,proto3" json:"serial_number,omitempty"`
	ScammerId    []string             `protobuf:"bytes,4,rep,name=scammer_id,json=scammerId,proto3" json:"scammer_id,omitempty"`
	CallId       []string             `protobuf:"bytes,5,rep,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Matched      bool                 `protobuf:"varint,6,opt,name=matched,proto3" json:"matched,omitempty"`
	Checked      bool                 `protobuf:"varint,7,opt,name=checked,proto3" json:"checked,omitempty"`
	MatchingAt   *datetime.DateTime   `protobuf:"bytes,8,opt,name=matching_at,json=matchingAt,proto3,oneof" json:"matching_at,omitempty"`
	TalkTime     *durationpb.Duration `protobuf:"bytes,9,opt,name=talk_time,json=talkTime,proto3,oneof" json:"talk_time,omitempty"`
	Transcript   *string              `protobuf:"bytes,10,opt,name=transcript,proto3,oneof" json:"transcript,omitempty"`
}

func (x *PutMatchingRequest) Reset() {
	*x = PutMatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMatchingRequest) ProtoMessage() {}

func (x *PutMatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMatchingRequest.ProtoReflect.Descriptor instead.
func (*PutMatchingRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{7}
}

func (x *PutMatchingRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PutMatchingRequest) GetCreatedAt() *datetime.DateTime {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PutMatchingRequest) GetSerialNumber() int64 {
	if x != nil {
		return x.SerialNumber
	}
	return 0
}

func (x *PutMatchingRequest) GetScammerId() []string {
	if x != nil {
		return x.ScammerId
	}
	return nil
}

func (x *PutMatchingRequest) GetCallId() []string {
	if x != nil {
		return x.CallId
	}
	return nil
}

func (x *PutMatchingRequest) GetMatched() bool {
	if x != nil {
		return x.Matched
	}
	return false
}

func (x *PutMatchingRequest) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *PutMatchingRequest) GetMatchingAt() *datetime.DateTime {
	if x != nil {
		return x.MatchingAt
	}
	return nil
}

func (x *PutMatchingRequest) GetTalkTime() *durationpb.Duration {
	if x != nil {
		return x.TalkTime
	}
	return nil
}

func (x *PutMatchingRequest) GetTranscript() string {
	if x != nil && x.Transcript != nil {
		return *x.Transcript
	}
	return ""
}

type PutMatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Matching *Matching `protobuf:"bytes,1,opt,name=matching,proto3" json:"matching,omitempty"`
}

func (x *PutMatchingResponse) Reset() {
	*x = PutMatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutMatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutMatchingResponse) ProtoMessage() {}

func (x *PutMatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutMatchingResponse.ProtoReflect.Descriptor instead.
func (*PutMatchingResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{8}
}

func (x *PutMatchingResponse) GetMatching() *Matching {
	if x != nil {
		return x.Matching
	}
	return nil
}

type DeleteMatchingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MatchingId string `protobuf:"bytes,1,opt,name=matching_id,json=matchingId,proto3" json:"matching_id,omitempty"`
}

func (x *DeleteMatchingRequest) Reset() {
	*x = DeleteMatchingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMatchingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMatchingRequest) ProtoMessage() {}

func (x *DeleteMatchingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMatchingRequest.ProtoReflect.Descriptor instead.
func (*DeleteMatchingRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteMatchingRequest) GetMatchingId() string {
	if x != nil {
		return x.MatchingId
	}
	return ""
}

type DeleteMatchingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMatchingResponse) Reset() {
	*x = DeleteMatchingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1_matching_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMatchingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMatchingResponse) ProtoMessage() {}

func (x *DeleteMatchingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_matching_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMatchingResponse.ProtoReflect.Descriptor instead.
func (*DeleteMatchingResponse) Descriptor() ([]byte, []int) {
	return file_api_v1_matching_proto_rawDescGZIP(), []int{10}
}

var File_api_v1_matching_proto protoreflect.FileDescriptor

var file_api_v1_matching_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x1a,
	0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74,
	0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xad, 0x03, 0x0a, 0x08,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x63, 0x61, 0x6d, 0x6d, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x3b, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09,
	0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x08, 0x74, 0x61,
	0x6c, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0e,
	0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x43, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x44, 0x0a,
	0x14, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x22, 0xc9, 0x02, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00,
	0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x0b, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x48, 0x02, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x03, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x54, 0x69,
	0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22,
	0x46, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x74,
	0x63, 0x68, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x22, 0xb7, 0x03, 0x0a, 0x12, 0x50, 0x75, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x63, 0x61,
	0x6d, 0x6d, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x63, 0x61, 0x6d, 0x6d, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x48, 0x00, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x01, 0x52, 0x08, 0x74, 0x61, 0x6c, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x23, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x61, 0x6c, 0x6b, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x22, 0x43, 0x0a, 0x13, 0x50, 0x75, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x6d, 0x61, 0x74, 0x63,
	0x68, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x6d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x22, 0x38, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x9d, 0x03, 0x0a, 0x14, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69,
	0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a,
	0x0c, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0b, 0x50, 0x75,
	0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x75, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x75, 0x74, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61,
	0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x6b, 0x34, 0x32, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x2d, 0x72, 0x65, 0x64, 0x69, 0x61, 0x6c, 0x3b, 0x61, 0x70, 0x69, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1_matching_proto_rawDescOnce sync.Once
	file_api_v1_matching_proto_rawDescData = file_api_v1_matching_proto_rawDesc
)

func file_api_v1_matching_proto_rawDescGZIP() []byte {
	file_api_v1_matching_proto_rawDescOnce.Do(func() {
		file_api_v1_matching_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1_matching_proto_rawDescData)
	})
	return file_api_v1_matching_proto_rawDescData
}

var file_api_v1_matching_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_v1_matching_proto_goTypes = []interface{}{
	(*Matching)(nil),               // 0: api.v1.Matching
	(*GetMatchingRequest)(nil),     // 1: api.v1.GetMatchingRequest
	(*GetMatchingResponse)(nil),    // 2: api.v1.GetMatchingResponse
	(*ListMatchingRequest)(nil),    // 3: api.v1.ListMatchingRequest
	(*ListMatchingResponse)(nil),   // 4: api.v1.ListMatchingResponse
	(*UpdateMatchingRequest)(nil),  // 5: api.v1.UpdateMatchingRequest
	(*UpdateMatchingResponse)(nil), // 6: api.v1.UpdateMatchingResponse
	(*PutMatchingRequest)(nil),     // 7: api.v1.PutMatchingRequest
	(*PutMatchingResponse)(nil),    // 8: api.v1.PutMatchingResponse
	(*DeleteMatchingRequest)(nil),  // 9: api.v1.DeleteMatchingRequest
	(*DeleteMatchingResponse)(nil), // 10: api.v1.DeleteMatchingResponse
	(*datetime.DateTime)(nil),      // 11: google.type.DateTime
	(*durationpb.Duration)(nil),    // 12: google.protobuf.Duration
}
var file_api_v1_matching_proto_depIdxs = []int32{
	11, // 0: api.v1.Matching.created_at:type_name -> google.type.DateTime
	11, // 1: api.v1.Matching.matching_at:type_name -> google.type.DateTime
	12, // 2: api.v1.Matching.talk_time:type_name -> google.protobuf.Duration
	0,  // 3: api.v1.GetMatchingResponse.matching:type_name -> api.v1.Matching
	0,  // 4: api.v1.ListMatchingResponse.matching:type_name -> api.v1.Matching
	11, // 5: api.v1.UpdateMatchingRequest.matching_at:type_name -> google.type.DateTime
	12, // 6: api.v1.UpdateMatchingRequest.talk_time:type_name -> google.protobuf.Duration
	0,  // 7: api.v1.UpdateMatchingResponse.matching:type_name -> api.v1.Matching
	11, // 8: api.v1.PutMatchingRequest.created_at:type_name -> google.type.DateTime
	11, // 9: api.v1.PutMatchingRequest.matching_at:type_name -> google.type.DateTime
	12, // 10: api.v1.PutMatchingRequest.talk_time:type_name -> google.protobuf.Duration
	0,  // 11: api.v1.PutMatchingResponse.matching:type_name -> api.v1.Matching
	1,  // 12: api.v1.MatchingStoreService.GetMatching:input_type -> api.v1.GetMatchingRequest
	3,  // 13: api.v1.MatchingStoreService.ListMatching:input_type -> api.v1.ListMatchingRequest
	7,  // 14: api.v1.MatchingStoreService.PutMatching:input_type -> api.v1.PutMatchingRequest
	5,  // 15: api.v1.MatchingStoreService.UpdateMatching:input_type -> api.v1.UpdateMatchingRequest
	9,  // 16: api.v1.MatchingStoreService.DeleteMatching:input_type -> api.v1.DeleteMatchingRequest
	2,  // 17: api.v1.MatchingStoreService.GetMatching:output_type -> api.v1.GetMatchingResponse
	4,  // 18: api.v1.MatchingStoreService.ListMatching:output_type -> api.v1.ListMatchingResponse
	8,  // 19: api.v1.MatchingStoreService.PutMatching:output_type -> api.v1.PutMatchingResponse
	6,  // 20: api.v1.MatchingStoreService.UpdateMatching:output_type -> api.v1.UpdateMatchingResponse
	10, // 21: api.v1.MatchingStoreService.DeleteMatching:output_type -> api.v1.DeleteMatchingResponse
	17, // [17:22] is the sub-list for method output_type
	12, // [12:17] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_api_v1_matching_proto_init() }
func file_api_v1_matching_proto_init() {
	if File_api_v1_matching_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_v1_matching_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Matching); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListMatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutMatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMatchingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1_matching_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMatchingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_v1_matching_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_api_v1_matching_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_api_v1_matching_proto_msgTypes[7].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1_matching_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_matching_proto_goTypes,
		DependencyIndexes: file_api_v1_matching_proto_depIdxs,
		MessageInfos:      file_api_v1_matching_proto_msgTypes,
	}.Build()
	File_api_v1_matching_proto = out.File
	file_api_v1_matching_proto_rawDesc = nil
	file_api_v1_matching_proto_goTypes = nil
	file_api_v1_matching_proto_depIdxs = nil
}
